{
  "description": "Create ALB target group dynamically and deploy an instance to it.",
  "keepWaitingPipelines": false,
  "lastModifiedBy": "admin@alcspintest.com",
  "limitConcurrent": true,
  "parameterConfig": [
    {
      "default": "arn:aws:elasticloadbalancing:us-east-1:569630529054:loadbalancer/app/awstest-dyn-test/3c98d0fc3f1fd79c",
      "description": "ARN of ALB",
      "hasOptions": false,
      "label": "",
      "name": "ALB",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    },
    {
      "default": "vpc-0b496dbcfbc72d591",
      "description": "VPC ID of the ALB",
      "hasOptions": false,
      "label": "",
      "name": "VPC",
      "options": [
        {
          "value": ""
        }
      ],
      "pinned": true,
      "required": true
    }
  ],
  "spelEvaluator": "v4",
  "stages": [
    {
      "clusters": [
        {
          "account": "ps-dev",
          "application": "awstest",
          "availabilityZones": {
            "us-east-1": [
              "us-east-1a",
              "us-east-1b",
              "us-east-1c",
              "us-east-1d",
              "us-east-1e",
              "us-east-1f"
            ]
          },
          "capacity": {
            "desired": 1,
            "max": 1,
            "min": 1
          },
          "cloudProvider": "aws",
          "cooldown": 10,
          "copySourceCustomBlockDeviceMappings": false,
          "ebsOptimized": false,
          "enabledMetrics": [],
          "freeFormDetails": "test",
          "healthCheckGracePeriod": 600,
          "healthCheckType": "ELB",
          "iamRole": "BaseIAMRole",
          "instanceMonitoring": false,
          "instanceType": "t3.nano",
          "keyPair": "alc-spin",
          "loadBalancers": [],
          "moniker": {
            "app": "awstest",
            "detail": "test",
            "stack": "dyn"
          },
          "provider": "aws",
          "securityGroups": [
            "sg-08a71792164f95b42",
            "sg-0dd9da144429f8f35"
          ],
          "spelLoadBalancers": [],
          "spelTargetGroups": [
            "${dynTargetGroup}"
          ],
          "spotPrice": "",
          "stack": "dyn",
          "strategy": "highlander",
          "subnetType": "armory-spin-alc-dev-public-kb3o3el4g4",
          "suspendedProcesses": [],
          "tags": {
            "Name": "test-dyn-tg-deploy",
            "owner": "alice@armory.io"
          },
          "targetGroups": [
            "${dynTargetGroup}"
          ],
          "targetHealthyDeployPercentage": 100,
          "terminationPolicies": [
            "Default"
          ],
          "useAmiBlockDeviceMappings": false
        }
      ],
      "name": "Deploy Dyn Target Group",
      "refId": "1",
      "requisiteStageRefIds": [
        "5"
      ],
      "type": "deploy"
    },
    {
      "baseLabel": "release",
      "baseName": "nginx-test",
      "baseOs": "focal",
      "cloudProviderType": "aws",
      "extendedAttributes": {
        "aws_associate_public_ip_address": "false",
        "aws_ena_support": "true"
      },
      "name": "Bake",
      "package": "nginx",
      "refId": "2",
      "regions": [
        "us-east-1"
      ],
      "requisiteStageRefIds": [],
      "storeType": "ebs",
      "type": "bake",
      "user": "admin",
      "vmType": "hvm"
    },
    {
      "credentials": "ps-dev",
      "name": "Deploy CF",
      "parameters": {
        "ALB": "${parameters.ALB}",
        "VPC": "${parameters.VPC}"
      },
      "refId": "4",
      "regions": [
        "us-east-1"
      ],
      "requisiteStageRefIds": [
        "2"
      ],
      "source": "text",
      "stackName": "awstest-dyn-test-alb-tg",
      "tags": {
        "owner": "alice@armory.io"
      },
      "templateBody": "AWSTemplateFormatVersion: \"2010-09-09\"\nDescription: \"Create ALB target groups and listeners\"\nParameters:\n    VPC:\n        Type: String\n        Description: The vpc to launch the service\n        Default: vpc-ID\n\n    ALB:\n        Type: String\n        Description: The ARN of the Application LoadBalancer\n        Default: alb-arn\n\n\nResources:\n    HTTPListener:\n        Type: \"AWS::ElasticLoadBalancingV2::Listener\"\n        Properties:\n            LoadBalancerArn: !Ref ALB\n            Port: 80\n            Protocol: \"HTTP\"\n            DefaultActions: \n              - \n                Order: 1\n                TargetGroupArn: !Ref TargetGroup\n                Type: \"forward\"\n                                           \n    TargetGroup:\n        Type: \"AWS::ElasticLoadBalancingV2::TargetGroup\"\n        Properties:\n            HealthCheckIntervalSeconds: 30\n            HealthCheckPath: \"/\"\n            Port: 80\n            Protocol: \"HTTP\"\n            HealthCheckPort: \"traffic-port\"\n            HealthCheckProtocol: \"HTTP\"\n            HealthCheckTimeoutSeconds: 5\n            UnhealthyThresholdCount: 2\n            TargetType: \"instance\"\n            Matcher: \n                HttpCode: \"200\"\n            HealthyThresholdCount: 5\n            VpcId: !Ref VPC\n            Name: \"awstest-dyn-test-tg1\"\n            HealthCheckEnabled: true\n            TargetGroupAttributes: \n              - \n                Key: \"stickiness.enabled\"\n                Value: \"false\"\n              - \n                Key: \"deregistration_delay.timeout_seconds\"\n                Value: \"300\"\n              - \n                Key: \"stickiness.type\"\n                Value: \"lb_cookie\"\n              - \n                Key: \"stickiness.lb_cookie.duration_seconds\"\n                Value: \"86400\"\n              - \n                Key: \"slow_start.duration_seconds\"\n                Value: \"0\"\n              - \n                Key: \"load_balancing.algorithm.type\"\n                Value: \"round_robin\"\n\n \nOutputs:        \n    ALB:\n        Description: ALB ARN\n        Value: !Ref ALB\n\n    TargetGroup:\n        Description: The created TargetGroup\n        Value: !GetAtt TargetGroup.TargetGroupName\n",
      "type": "deployCloudFormation"
    },
    {
      "failOnFailedExpressions": true,
      "name": "Evaluate Variables",
      "refId": "5",
      "requisiteStageRefIds": [
        "4"
      ],
      "type": "evaluateVariables",
      "variables": [
        {
          "key": "dynTargetGroup",
          "value": "${#stage(\"Deploy CF\").outputs.outputs.TargetGroup}"
        }
      ]
    }
  ],
  "triggers": [],
  "updateTs": "1635192772000"
}
